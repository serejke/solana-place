/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Game, GameInterface } from "../Game";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_height",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "_width",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "_changeCost",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "row",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "column",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "color",
        type: "uint8",
      },
    ],
    name: "PixelChangedEvent",
    type: "event",
  },
  {
    inputs: [],
    name: "authority",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "changeCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "row",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "column",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "newColor",
        type: "uint8",
      },
    ],
    name: "changePixel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "colors",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "height",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "state",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "width",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e06040523480156200001157600080fd5b5060405162000ea538038062000ea58339818101604052810190620000379190620001c1565b60008361ffff1611801562000050575060008261ffff16115b6200005a57600080fd5b8261ffff1660808161ffff16815250508161ffff1660a08161ffff16815250508060c08181525050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a051608051620000d491906200024c565b61ffff1667ffffffffffffffff811115620000f457620000f362000292565b5b6040519080825280601f01601f191660200182016040528015620001275781602001600182028036833780820191505090505b506001908162000138919062000502565b50505050620005e9565b600080fd5b600061ffff82169050919050565b620001608162000147565b81146200016c57600080fd5b50565b600081519050620001808162000155565b92915050565b6000819050919050565b6200019b8162000186565b8114620001a757600080fd5b50565b600081519050620001bb8162000190565b92915050565b600080600060608486031215620001dd57620001dc62000142565b5b6000620001ed868287016200016f565b935050602062000200868287016200016f565b92505060406200021386828701620001aa565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620002598262000147565b9150620002668362000147565b9250828202620002768162000147565b91508082146200028b576200028a6200021d565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200031457607f821691505b6020821081036200032a5762000329620002cc565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000355565b620003a0868362000355565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620003e3620003dd620003d78462000186565b620003b8565b62000186565b9050919050565b6000819050919050565b620003ff83620003c2565b620004176200040e82620003ea565b84845462000362565b825550505050565b600090565b6200042e6200041f565b6200043b818484620003f4565b505050565b5b8181101562000463576200045760008262000424565b60018101905062000441565b5050565b601f821115620004b2576200047c8162000330565b620004878462000345565b8101602085101562000497578190505b620004af620004a68562000345565b83018262000440565b50505b505050565b600082821c905092915050565b6000620004d760001984600802620004b7565b1980831691505092915050565b6000620004f28383620004c4565b9150826002028217905092915050565b6200050d82620002c1565b67ffffffffffffffff81111562000529576200052862000292565b5b620005358254620002fb565b6200054282828562000467565b600060209050601f8311600181146200057a576000841562000565578287015190505b620005718582620004e4565b865550620005e1565b601f1984166200058a8662000330565b60005b82811015620005b4578489015182556001820191506020850194506020810190506200058d565b86831015620005d45784890151620005d0601f891682620004c4565b8355505b6001600288020188555050505b505050505050565b60805160a05160c0516108776200062e60003960006103630152600081816101aa0152818161021c0152610315015260008181610154015261017801526108776000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063bf7e214f1161005b578063bf7e214f146100da578063c19d93fb146100f8578063f2c1692014610116578063f8e58024146101345761007d565b80630ef2674314610082578063856f1f24146100a05780639ededf77146100bc575b600080fd5b61008a610152565b6040516100979190610430565b60405180910390f35b6100ba60048036038101906100b591906104b5565b610176565b005b6100c4610313565b6040516100d19190610430565b60405180910390f35b6100e2610337565b6040516100ef9190610549565b60405180910390f35b61010061035b565b60405161010d919061057d565b60405180910390f35b61011e610361565b60405161012b919061057d565b60405180910390f35b61013c610385565b6040516101499190610628565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000061ffff168361ffff161080156101d457507f000000000000000000000000000000000000000000000000000000000000000061ffff168261ffff16105b610213576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020a906106a7565b60405180910390fd5b60008261ffff167f000000000000000000000000000000000000000000000000000000000000000061ffff168561ffff1661024e91906106f6565b6102589190610738565b90508160f81b600182815461026c9061079b565b811061027b5761027a6107cc565b5b81546001161561029a5790600052602060002090602091828204019190065b601f036101000a81548160ff021916907f0100000000000000000000000000000000000000000000000000000000000000840402179055507f4d8adfb11ad2b05f29ff4e9bdf4d6c6a1db066085d92e7901a7d52eebdd70c998484846040516103059392919061080a565b60405180910390a150505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b7f000000000000000000000000000000000000000000000000000000000000000081565b600180546103929061079b565b80601f01602080910402602001604051908101604052809291908181526020018280546103be9061079b565b801561040b5780601f106103e05761010080835404028352916020019161040b565b820191906000526020600020905b8154815290600101906020018083116103ee57829003601f168201915b505050505081565b600061ffff82169050919050565b61042a81610413565b82525050565b60006020820190506104456000830184610421565b92915050565b600080fd5b61045981610413565b811461046457600080fd5b50565b60008135905061047681610450565b92915050565b600060ff82169050919050565b6104928161047c565b811461049d57600080fd5b50565b6000813590506104af81610489565b92915050565b6000806000606084860312156104ce576104cd61044b565b5b60006104dc86828701610467565b93505060206104ed86828701610467565b92505060406104fe868287016104a0565b9150509250925092565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061053382610508565b9050919050565b61054381610528565b82525050565b600060208201905061055e600083018461053a565b92915050565b6000819050919050565b61057781610564565b82525050565b6000602082019050610592600083018461056e565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156105d25780820151818401526020810190506105b7565b60008484015250505050565b6000601f19601f8301169050919050565b60006105fa82610598565b61060481856105a3565b93506106148185602086016105b4565b61061d816105de565b840191505092915050565b6000602082019050818103600083015261064281846105ef565b905092915050565b600082825260208201905092915050565b7f496e646578206f7574206f662067616d6520626f756e64730000000000000000600082015250565b600061069160188361064a565b915061069c8261065b565b602082019050919050565b600060208201905081810360008301526106c081610684565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061070182610564565b915061070c83610564565b925082820261071a81610564565b91508282048414831517610731576107306106c7565b5b5092915050565b600061074382610564565b915061074e83610564565b9250828201905080821115610766576107656106c7565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806107b357607f821691505b6020821081036107c6576107c561076c565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6108048161047c565b82525050565b600060608201905061081f6000830186610421565b61082c6020830185610421565b61083960408301846107fb565b94935050505056fea2646970667358221220d8d54882b076e55d5bb5278032570e688ed3880cbc259779c5be683a26b6f1fa64736f6c63430008110033";

type GameConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GameConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Game__factory extends ContractFactory {
  constructor(...args: GameConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _height: PromiseOrValue<BigNumberish>,
    _width: PromiseOrValue<BigNumberish>,
    _changeCost: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Game> {
    return super.deploy(
      _height,
      _width,
      _changeCost,
      overrides || {}
    ) as Promise<Game>;
  }
  override getDeployTransaction(
    _height: PromiseOrValue<BigNumberish>,
    _width: PromiseOrValue<BigNumberish>,
    _changeCost: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _height,
      _width,
      _changeCost,
      overrides || {}
    );
  }
  override attach(address: string): Game {
    return super.attach(address) as Game;
  }
  override connect(signer: Signer): Game__factory {
    return super.connect(signer) as Game__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GameInterface {
    return new utils.Interface(_abi) as GameInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Game {
    return new Contract(address, _abi, signerOrProvider) as Game;
  }
}
